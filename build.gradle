buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'scala'
apply plugin: 'maven'

sourceCompatibility='1.8'
targetCompatibility='1.8'

ext {
    massive = "0"
    major = "11"
    minor = "0"
    mcVersion = "1.10.2"
    forgeVersion = "12.18.0.2007-1.10.0"
}

group= "uk.kihira.foxlib"
archivesBaseName = "FoxLib"
version = "${project.mcVersion}-${project.massive}.${project.major}.${project.minor}"

minecraft {
    version = "${project.mcVersion}-${project.forgeVersion}"
    runDir = "run"
    mappings = "snapshot_20160518"

    replace '@VERSION@', project.version
}

//noinspection GroovyAssignabilityCheck
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
configurations {
    deployerJars
}

repositories {
    mavenCentral()
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"
}

//noinspection GroovyAssignabilityCheck
uploadArchives {
    repositories.mavenDeployer {
        if (project.hasProperty("maven_url")) {
            configuration = configurations.deployerJars
            repository(url: project.properties.maven_url) { // If it ever complains about unknown host, manually add server key to known_hosts
                authentication(userName: project.properties.maven_username, password: project.properties.maven_password)
            }
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
        }

        pom.project {
            name project.archivesBaseName
            packaging 'jar'
            description 'FoxLib'
            url 'https://github.com/kihira/FoxLib/'

            scm {
                url 'https://github.com/kihira/FoxLib/'
                connection 'scm:git:git://github.com/kihira/FoxLib.git'
                developerConnection 'scm:git:git@github.com/kihira/FoxLib.git'
            }

            issueManagement {
                system 'github'
                url 'https://github.com/kihira/FoxLib/issues'
            }

            licenses {
                license {
                    name 'The MIT License (MIT)'
                    url 'https://opensource.org/licenses/MIT'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'Kihira'
                    name 'Kihira'
                    roles {
                        role 'developer'
                    }
                }
            }
        }
    }
}