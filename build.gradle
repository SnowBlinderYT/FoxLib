buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'Kihira Repo'
        url = 'http://maven.kihirakreations.co.uk'
    }
}

apply plugin: 'scala'
apply plugin: 'forge'

configurations {
    deployerJars
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.2"
}

project.ext {
    massive = "0"
    major = "4"
    minor = "1"
    mcVersion = "1.7.10"
    forgeVersion = "10.13.0.1180"
}

version = "${project.ext.mcVersion}-${project.ext.massive}.${project.ext.major}.${project.minor}.${System.getenv("BUILD_NUMBER") ?: 0}"
group= "kihira"
archivesBaseName = "FoxLib"

minecraft {
    version = "${project.ext.mcVersion}-${project.ext.forgeVersion}"

    replaceIn "FoxLib.scala"
    replace "@VERSION@", "${version}.${System.getenv("BUILD_NUMBER") ?: 0}"
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.ext.mcVersion
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.api.allSource
    classifier = 'src'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.api.output
    classifier = 'dev'
}

artifacts {
    archives userDevJar
}

uploadArchives {
    dependsOn 'reobf'

    if (project.hasProperty("maven_url")) {
        repositories.mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: project.maven_url) {
                authentication(userName: project.maven_username, password: project.maven_password)
            }
            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'FoxLib'
                    url 'http://kihirakreations.co.uk'

                    scm {
                        url 'https://github.com/kihira/FoxLib'
                        connection 'scm:git:git://github.com/kihira/FoxLib.git'
                        developerConnection 'scm:git:git@github.com:kihira/FoxLib.git'
                    }

                    issueManagement {
                        system 'github'
                        url 'https://github.com/kihira/FoxLib/issues'
                    }

                    licenses {
                        license {
                            name 'MIT'
                            url 'https://github.com/kihira/FoxLib/blob/master/LICENSE'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'Kihira'
                            name 'SpaceToad'
                            roles { role 'developer' }
                        }
                    }
                }
            }
        }
    }
    else {
        add project.repositories.mavenLocal()
    }
}